@startuml
'https://plantuml.com/activity-diagram-beta
start
:实例化
(在堆空间中申请空间，对象的属性值一般都是默认值，
实际就是反射创建对象的过程);
note right:createBeanInstance反射创建对象
group 初始化
group 属性赋值（属性填充）
:自定义属性赋值;
note right:populateBean set方法完成赋值操作
:容器属性赋值;
note right:invokeAwareMethods
end group
note right:执行到此步骤，对象的创建和属性的赋值都完成了，\n那么此时对象是否可以直接拿来用呢？理论上是可以的，但是Spring要考虑扩展性
:调用InstantiationAwareBeanPostProcessor
的postProcessBeforeInstantiation()方法;
:实例化;
:调用InstantiationAwareBeanPostProcessor
的postProcessAfterInstantiation()方法;
:调用InstantiationAwareBeanPostProcessor
的postProcessPropertyValues()方法;
:设置属性值;
:调用BeanNameAware的setBeanName()方法;
:调用BeanFactoryAware的setBeanFactory()方法;
:调用ApplicationContextAware的setApplicationContext()方法;
:调用BeanPostProcessor的postProcessBeforeInitialization方法;
:调用InitializingBean的afterPropertiesSet()方法;
:通过init-method属性配置的初始化方法;
:调用BeanPostProcessor的postProcessAfterInitialization()方法;
if (Bean的类型?) then (singleton)
    :Spring缓冲池中准备就绪的Bean;
    ->容器销毁;
    :调用DisposableBean的destroy()方法;
    :通过destroy-method属性配置的销毁方法;
else (prototype)
    :将准备就绪的Bean交给调用者;
endif
end group
stop

@enduml
